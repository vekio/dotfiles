# rc files
# -----------------------------------------------------------------------------
[ -f "${XDG_CONFIG_HOME}/zsh/.aliases" ] && . "${XDG_CONFIG_HOME}/zsh/.aliases"
[ -f "${XDG_CONFIG_HOME}/zsh/.fzf" ] && . "${XDG_CONFIG_HOME}/zsh/.fzf"


# autocompletion
# -----------------------------------------------------------------------------
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'


# fzf
# --------------------------------------------------------------------
if [[ ! "${PATH}" == *${XDG_DATA_HOME}/fzf/bin* ]]; then
    export PATH="${PATH:+${PATH}:}${XDG_DATA_HOME}/fzf/bin"
fi
[[ $- == *i* ]] && . "${XDG_DATA_HOME}/fzf/shell/completion.zsh" 2> /dev/null
. "${XDG_DATA_HOME}/fzf/shell/key-bindings.zsh"


# enable conda
# --------------------------------------------------------------------
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('${XDG_DATA_HOME}/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "${XDG_DATA_HOME}/miniconda3/etc/profile.d/conda.sh" ]; then
        . "${XDG_DATA_HOME}/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="${PATH:+${PATH}:}${XDG_DATA_HOME}/miniconda3/bin"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
conda activate base


# zsh plugins
# -----------------------------------------------------------------------------
# . "${XDG_DATA_HOME}/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh"
. "${XDG_DATA_HOME}/zsh-autosuggestions/zsh-autosuggestions.zsh"


# starship
# -----------------------------------------------------------------------------
[ -f "${HOME}/.local/bin/starship" ] && eval "$(starship init zsh)"


# terraform
# -----------------------------------------------------------------------------
[ -f "/usr/bin/terraform" ] -help &>/dev/null && complete -C /usr/bin/terraform terraform
